define(
    main_phylanx,
        lr,
    num_iter,
    block(
	define(a, 7500),
	define(b, 7500),
	define(c, 7500),
        define(X, constant(1.0, make_list(a, b))),
        define(y, constant(1.0, make_list(1, a))),
        define(wh, constant(1.0, make_list(b,c))),
        define(bh, constant(1.0, make_list(1, c))),
        define(wout, constant(1.0, make_list(c, a))),
        define(bout, constant(1.0, make_list(1, a))),	
        define(wh_local, wh),
        define(bh_local, bh),
        define(wout_local, wout),
        define(bout_local, bout),
        define(output, 0),
        define(hidden_layer_input1, 0),
        define(hidden_layer_input, 0),
        define(hiddenlayer_activations, 0),
        define(output_layer_input1, 0),
        define(output_layer_input, 0),
        define(slope_hidden_layer, 0),
        define(slope_output_layer, 0),
        define(E, 0),
        define(d_output, 0),
        define(Error_at_hidden_layer, 0),
        define(d_hiddenlayer, 0),
        map(
            lambda(
                i,
                block(
		   
                    store(
                        hidden_layer_input1,
                        dot(X, wh_local)
                    ),
                    store(
                        hidden_layer_input,
                        (hidden_layer_input1 + bh_local)
                    ),
                    store(
                        hiddenlayer_activations,
                        (
                            1/(
                                1+exp(
                                    -(hidden_layer_input)
                                )
                            )
                        )
                    ),
                    store(
                        output_layer_input1,
                        dot(hiddenlayer_activations, wout_local)
                    ),
                    store(
                        output_layer_input,
                        (output_layer_input1 + bout_local)
                    ),
                    store(
                        output,
                        (
                            1/(
                                1+exp(
                                    -(output_layer_input)
                                )
                            )
                        )
                    ),
                    store(
                        E,
                        (y - output)
                    ),
                    store(
                        slope_output_layer,
                        (
                            output*(1 - output)
                        )
                    ),
                    store(
                        slope_hidden_layer,
                        (
                            hiddenlayer_activations*(1 - hiddenlayer_activations)
                        )
                    ),
                    store(
                        d_output,
                        (E * slope_output_layer)
                    ),
                    store(
                        Error_at_hidden_layer,
                        dot(
                            d_output,
                            transpose(wout_local)
                        )
                    ),
                    store(
                        d_hiddenlayer,
                        (Error_at_hidden_layer * slope_hidden_layer)
                    ),
                    store(
                        wout_local,
                        wout_local+(
                            dot(
                                transpose(hiddenlayer_activations),
                                d_output
                            )*lr
                        )
                    ),
                    store(
                        bout_local,
                        bout_local+(
                            sum(d_output, 0, true)*lr
                        )
                    ),
                    store(
                        wh_local,
                        wh_local+(
                            dot(
                                transpose(X),
                                d_hiddenlayer
                            )*lr
                        )
                    ),
                    store(
                        bh_local,
                        bh_local+(
                            sum(d_hiddenlayer, 0, true)*lr
                        )
                    )
                )
            ),
            range(num_iter)
        ),
output
//          cout(shape(output), "")
   // cout(shape(bout_local)),  
    //cout(shape(wout_local))  
    )
)
apply(main_phylanx, sys_argv)
